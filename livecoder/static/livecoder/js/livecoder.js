// Generated by CoffeeScript 1.9.3
(function() {
  var ext, sc;

  sc = "/static/components";

  ext = "/nbextensions/livecoder";

  require([sc + "/underscore/underscore-min.js", ext + "/lib/d3/d3.js", sc + "/backbone/backbone-min.js"], function(_, d3, Backbone) {
    var construct, fn, lvc, update;
    construct = function(constructor, args) {
      var Factory;
      Factory = constructor.bind.apply(constructor, [null].concat(args));
      return new Factory();
    };
    lvc = window._livecoder;
    fn = null;
    update = (function(_this) {
      return function() {
        var err, src;
        if ("_script" in lvc.changed) {
          src = "require([\"" + ext + "/lib/d3/d3.min.js\"], function(d3){\n  " + (lvc.get("_script")) + "\n});";
          try {
            fn = construct(Function, ["model"].concat([src]));
          } catch (_error) {
            err = _error;
            console.log(err.message);
          }
        }
        if ("_style" in lvc.changed) {
          d3.select("head").selectAll("style").data([1]).call(function(style) {
            return style.enter().append("style");
          }).html(lvc.get("_style"));
        }
        if ("_html" in lvc.changed) {
          d3.select("body").html(lvc.get("_html"));
        }
        if (fn) {
          try {
            return fn.apply(window, [lvc]);
          } catch (_error) {
            err = _error;
            return console.log("execution errr", err);
          }
        }
      };
    })(this);
    return lvc.on("change", update);
  });

}).call(this);
