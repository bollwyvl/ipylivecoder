// Generated by CoffeeScript 1.9.3
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  define(["d3", "underscore", "widgets/js/widget", "base/js/namespace"], function(d3, _, widget, arg) {
    var LivecoderModel, metadata, notebook;
    notebook = arg.notebook;
    if (!("livecoder" in notebook.metadata)) {
      notebook.metadata.livecoder = {};
    }
    metadata = notebook.metadata.livecoder;
    return LivecoderModel = (function(superClass) {
      extend(LivecoderModel, superClass);

      function LivecoderModel() {
        this.set_state = bind(this.set_state, this);
        this.get_state = bind(this.get_state, this);
        return LivecoderModel.__super__.constructor.apply(this, arguments);
      }

      LivecoderModel.prototype.get_state = function() {
        var state;
        state = LivecoderModel.__super__.get_state.call(this);
        metadata[this.get("description")] = _.pick(state, ["_html", "_script", "_style"]);
        return state;
      };

      LivecoderModel.prototype.set_state = function(state) {
        return LivecoderModel.__super__.set_state.call(this, state).then((function(_this) {
          return function() {
            return _this.set(metadata[_this.get("description")]);
          };
        })(this));
      };

      return LivecoderModel;

    })(widget.WidgetModel);
  });

}).call(this);
